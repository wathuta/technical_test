// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	grpcclients "github.com/wathuta/technical_test/payment/internal/grpc_clients"

	orders "github.com/wathuta/technical_test/protos_gen/orders"
)

// OrderServiceClient is an autogenerated mock type for the OrderServiceClient type
type OrderServiceClient struct {
	mock.Mock
}

// UpdateOrderDetails provides a mock function with given fields: orderId, status
func (_m *OrderServiceClient) UpdateOrderDetails(orderId string, status orders.OrderStatus) chan grpcclients.ServiceResult {
	ret := _m.Called(orderId, status)

	var r0 chan grpcclients.ServiceResult
	if rf, ok := ret.Get(0).(func(string, orders.OrderStatus) chan grpcclients.ServiceResult); ok {
		r0 = rf(orderId, status)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan grpcclients.ServiceResult)
		}
	}

	return r0
}

// NewOrderServiceClient creates a new instance of OrderServiceClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrderServiceClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrderServiceClient {
	mock := &OrderServiceClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
