// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	model "github.com/wathuta/technical_test/payment/internal/model"
)

// MpesaService is an autogenerated mock type for the MpesaService type
type MpesaService struct {
	mock.Mock
}

// InitiateSTKPushRequest provides a mock function with given fields: body
func (_m *MpesaService) InitiateSTKPushRequest(body *model.STKPushRequestBody) (*model.STKPushRequestResponse, error) {
	ret := _m.Called(body)

	var r0 *model.STKPushRequestResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*model.STKPushRequestBody) (*model.STKPushRequestResponse, error)); ok {
		return rf(body)
	}
	if rf, ok := ret.Get(0).(func(*model.STKPushRequestBody) *model.STKPushRequestResponse); ok {
		r0 = rf(body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.STKPushRequestResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*model.STKPushRequestBody) error); ok {
		r1 = rf(body)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMpesaService creates a new instance of MpesaService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMpesaService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MpesaService {
	mock := &MpesaService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
