syntax = "proto3";

package orders;

option go_package = ".;orders";

import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_PENDING = 1;
  ORDER_STATUS_PROCESSING = 2;
  ORDER_STATUS_SHIPPED = 3;
  ORDER_STATUS_DELIVERED = 4;
  ORDER_STATUS_CANCELLED = 5;
}

enum PaymentMethod {
  PAYMENT_METHOD_UNSPECIFIED = 0;
  PAYMENT_METHOD_CREDIT_CARD = 1;
  PAYMENT_METHOD_MPESA = 2;
}

message Address {
  string street = 1;
  string city = 2;
  string state = 3;
  string postal_code = 4;
  string country = 5;
}

message Order {
  string order_id = 1;
  string customer_id = 2;
  Address pickup_address = 4;
  Address delivery_address = 5;
  string shipping_method = 6;
  OrderStatus order_status = 7;
  google.protobuf.Timestamp scheduled_pickup_datetime = 8;
  google.protobuf.Timestamp scheduled_delivery_datetime = 9;
  string tracking_number = 10;
  PaymentMethod payment_method = 11;
  string invoice_number = 12;
  string special_instructions = 13;
  double shipping_cost = 14;
  google.protobuf.Timestamp created_at = 16;
  google.protobuf.Timestamp updated_at = 17;
  google.protobuf.Timestamp deleted_at = 18;
  // Add more fields as needed.
}


message OrderDetails {
    string order_details_id = 1;
    string order_id = 2;
    string product_id = 3;
    int32 product_quantity = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
    google.protobuf.Timestamp deleted_at = 7;
}

// Service for managing orders
service OrderService {
    // Create a new order
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);

    // Get details of an order
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);

    // Update an order
    rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);

    // Delete an order
    rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse);

    // Get orders by customer ID
    rpc GetOrdersByCustomerId(GetOrdersByCustomerIdRequest) returns (GetOrdersByCustomerIdResponse);

    // Get orders by product ID
    rpc GetOrdersByProductId(GetOrdersByProductIdRequest) returns (GetOrdersByProductIdResponse);

    // Get order details by ID
    rpc GetOrderDetailsById (GetOrderDetailByIdRequest) returns(GetOrderDetailByIdResponse);

    // Update order details
    rpc UpdateOrderDetails (GetOrderDetailByIdRequest) returns(GetOrderDetailByIdResponse);

    // Get Order details by UserID
    rpc GetOrderDetailsByOrderId(GetOrderDetailsByOrderIdRequest) returns (GetOrderDetailsByOrderIdResponse);
}

// Request to get order details
message GetOrderDetailsByOrderIdRequest {
  string order_details_id = 1;
}

// Request to get order details
message GetOrderDetailsByOrderIdResponse {
  repeated OrderDetails order_details = 1;
}

// Request to get order details
message GetOrderDetailByIdRequest {
  string order_details_id = 1;
}

// Response to get order details by id
message GetOrderDetailByIdResponse {
  OrderDetails order_details = 1;
}

// Request to update order details
message UpdateOrderDetailsRequest {
  OrderDetails order_details = 2;
  google.protobuf.FieldMask update_mask = 3;
}

// Response after updating order details
message UpdateOrderDetailsResponse {
  OrderDetails order_details = 1;
}


// Request to create an order
message CreateOrderRequest {
    Order order = 1;
    string product_id =2;
    int32 product_quantity =3;
}

// Response after creating an order
message CreateOrderResponse {
   Order order = 1;
   OrderDetails OrderDetails = 2;
}

// Request to get an order
message GetOrderRequest {
    string order_id = 1;
}

// Response after getting an order
message GetOrderResponse {
    Order order = 1;
}

// Request to update an order
message UpdateOrderRequest {
    Order order = 2;
    google.protobuf.FieldMask update_mask = 3;
}

// Response after updating an order
message UpdateOrderResponse {
  Order order = 1;
}

// Request to delete an order
message DeleteOrderRequest {
    string order_id = 1;
}

// Response after deleting an order
message DeleteOrderResponse {
    bool success = 1;
}

// Request to get orders by customer ID
message GetOrdersByCustomerIdRequest {
    string customer_id = 1;
}

// Response after getting orders by customer ID
message GetOrdersByCustomerIdResponse {
    repeated Order orders = 1;
}

// Request to get orders by product ID
message GetOrdersByProductIdRequest {
    string product_id = 1;
}

// Response after getting orders by product ID
message GetOrdersByProductIdResponse {
    repeated Order orders = 1;
    repeated OrderDetails order_details = 2;
}
