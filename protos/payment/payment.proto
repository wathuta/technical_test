syntax = "proto3";

package ecommerce;

// Import the google/protobuf package for Timestamp support.
import "google/protobuf/timestamp.proto";

option go_package = ".;payment";
// Payment represents a payment made by a customer for an order.
message Payment {
    string paymen_id = 1;
    string order_id = 2;
    string customer_id = 3;
    double amount = 4;
    string currency = 5;
    PaymentStatus status = 6;
    string customer_phone=7;
    int64 product_cost=8;
    int64 shipping_fee = 9;
    google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp updated_at = 11;
  }

  // PaymentStatus represents possible payment statuses.
  enum PaymentStatus {
    PENDING = 0;
    COMPLETED = 1;
    FAILED = 2;
    CANCELED = 3;
  }

  // PaymentMethod represents possible payment methods.
  enum PaymentMethod {
    CREDIT_CARD = 0;
    MPESA = 2;
    // Add more payment methods as needed.
  }

  // CreatePaymentRequest represents a request to create a new payment.
  message CreatePaymentRequest {
    string order_id = 2;
    string customer_id = 3;
    PaymentMethod payment_method = 4;
    double amount = 5;
    string customer_phone=8;
    int64 product_cost=9;
    int64 shipping_fee = 10;
  }

  // CreatePaymentResponse represents the response after creating a payment.
  message CreatePaymentResponse {
    Payment payment = 1;
  }

  // GetPaymentByIdRequest represents a request to retrieve a payment by ID.
  message GetPaymentByIdRequest {
    string id = 1;
  }

  // GetPaymentByIdResponse represents the response after retrieving a payment by ID.
  message GetPaymentByIdResponse {
    Payment payment = 1;
  }

  // PaymentService defines the payment service.
  service PaymentService {
    // CreatePayment creates a new payment.
    rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse);

    // GetPayment retrieves a payment by ID.
    rpc GetPaymentById(GetPaymentByIdRequest) returns (GetPaymentByIdResponse);
  }
